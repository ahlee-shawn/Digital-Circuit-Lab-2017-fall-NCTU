`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2017/09/22 16:36:19
// Design Name: 
// Module Name: mmult
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module mmult(
  input  clk,                 // Clock signal
  input  reset_n,             // Reset signal (negative logic)
  input  enable,              // Activation signal for matrix multiplication
  input  [0:9*8-1] A_mat,     // A matrix
  input  [0:9*8-1] B_mat,     // B matrix
  output valid,               // Signals that the output is valid to read
  output reg [0:9*17-1] C_mat, // The result of A x B
  output reg [2:0]count=3'b000  
    );
    
    reg [0:7]A[0:2][0:2];
    reg [0:7]B[0:2][0:2];
    reg [0:16]Ans[0:2][0:2]; 
    integer i,j,k;
    reg OK=0;
    
        
    always@(negedge clk)begin
    if(!reset_n)begin
        {A[0][0],A[0][1],A[0][2],A[1][0],A[1][1],A[1][2],A[2][0],A[2][1],A[2][2]}=A_mat;
        {B[0][0],B[0][1],B[0][2],B[1][0],B[1][1],B[1][2],B[2][0],B[2][1],B[2][2]}=B_mat;
        {Ans[0][0],Ans[0][1],Ans[0][2],Ans[1][0],Ans[1][1],Ans[1][2],Ans[2][0],Ans[2][1],Ans[2][2]}=153'b0;
        C_mat=153'b0;
        end 
    end
    
    always@(posedge clk)begin
    if(enable&&!OK&&count[2:0]==3'b000)begin
        for(i=0;i<3;i=i+1)begin
            for(j=0;j<3;j=j+1)begin
                 Ans[i][j]= Ans[i][j]+A[i][0]*B[0][j];
                 end
            end
        count=3'b001;
    end
    end
    
    always@(posedge clk)begin
    if(enable&&!OK&&count[2:0]==3'b001)begin
        for(i=0;i<3;i=i+1)begin
            for(j=0;j<3;j=j+1)begin
                Ans[i][j]= Ans[i][j]+A[i][1]*B[1][j];
                end
            end
        count=3'b010;
    end
    end
    
    always@(posedge clk)begin
    if(enable&&!OK&&count[2:0]==3'b010)begin
        for(i=0;i<3;i=i+1)begin
            for(j=0;j<3;j=j+1)begin
                Ans[i][j]= Ans[i][j]+A[i][2]*B[2][j];
                end
            end
        count=3'b100;
    end
    end
    
    always@(posedge clk)begin
    C_mat={Ans[0][0],Ans[0][1],Ans[0][2],Ans[1][0],Ans[1][1],Ans[1][2],Ans[2][0],Ans[2][1],Ans[2][2]};
    if(enable&&!OK&&count[2:0]==3'b100)begin
        OK=1;
    end
    end

    assign  valid=OK;

endmodule